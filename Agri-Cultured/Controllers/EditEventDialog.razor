@using MySql.Data.MySqlClient;
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration
@using Agri_Cultured.Controllers;
@using Agri_Cultured.Pages;


<MudDialog Class="rz-background-color-base-800 rz-shadow-10 rz-border-radius-10 rz-p-1" Style="color: white; text-shadow: 5px px 3px black;">
    <TitleContent>
        Edit Event
    </TitleContent>
    <DialogContent>
        <MudTextField T="string" Label="Name" @bind-Value=@name Variant="MudBlazor.Variant.Filled" Margin="Margin.Dense" Style="margin-bottom: 15px;" Required="true"></MudTextField>
        <MudTextField T="DateTime" @bind-Value=@dated Format="yyyy-MM-dd" Label="Date Started" InputType="InputType.Date" Variant="MudBlazor.Variant.Filled" Margin="Margin.Dense" Style="margin-bottom: 15px;" Required="true" />
        <MudTextField T="string" @bind-Value=@dmg Label="Damage" Variant="MudBlazor.Variant.Filled" Margin="Margin.Dense" Style="margin-bottom: 15px;" Required="true"></MudTextField>
        <MudNumericField @bind-Value=@perdmg Label="Percentage" Variant="MudBlazor.Variant.Filled" Min="0" Max="100" Style="margin-bottom: 15px;" Required="true" />
        <MudTextField T="string" @bind-Value=@comm Label="Comments" Variant="MudBlazor.Variant.Filled" Lines="3" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public int eventId { get; set; }
    [Parameter] public string plantId { get; set; }
    private string name;
    DateTime dated = DateTime.Now;
    private string dmg; 
    private int perdmg; 
    private string comm;
    string dateFormatted;



    async void Submit()
    {
        dateFormatted = dated.ToString("yyyy-MM-dd");
        await UpdateEvent();       
        NavigationManager.NavigateTo("/Events/" + plantId, forceLoad: true);
    }
    void Cancel() => MudDialog.Cancel();


    async Task UpdateEvent()
    {
        var connnectionString = Configuration.GetConnectionString("DefaultConnection");
        MySql.Data.MySqlClient.MySqlConnection connection = new MySql.Data.MySqlClient.MySqlConnection(connnectionString);  
        string updateEventQuery = "UPDATE events SET name = @name, date = @date, damage = @dmg, perc_damage = @perdmg, comments = @comm WHERE event_id='" + eventId + "'";
        using (MySql.Data.MySqlClient.MySqlCommand command = new MySql.Data.MySqlClient.MySqlCommand(updateEventQuery, connection))

        {
                connection.Open();
                command.Parameters.AddWithValue("@name", name);
                command.Parameters.AddWithValue("@date", dateFormatted);
                command.Parameters.AddWithValue("@dmg", dmg);
                command.Parameters.AddWithValue("@perdmg", perdmg);
                command.Parameters.AddWithValue("@comm", comm);
                await command.ExecuteNonQueryAsync();
                connection.Close();
        }
            
        
    }

    //public double DoubleValue { get; set; } // For hours

    //string sampleText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."; // For comments
}